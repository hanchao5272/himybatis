<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--数据源配置-->
    <!--通过property-placeholder获取属性文件配置的值-->
    <context:property-placeholder file-encoding="utf-8" location="classpath:jdbc.properties"/>
    <!--配置DataSource-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--用Spring的dataSource替代原mybatis-config.xml的dataSource-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置MyBatis总配置文件,如果通过其他配置取代了所有的MyBatis配置，则可以不要此项配置-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--配置MyBatis映射文件，取代原mybatis-config.xml的mappers配置-->
        <property name="mapperLocations" value="classpath:mybatis-mappers/Topic.xml"/>
        <!--配置类型别名，取代原mybatis-config.xml的typeAliases，最好将实体放在同一类型的包下-->
        <property name="typeAliasesPackage" value="pers.hanchao.himybatis.curd.entity"/>
    </bean>
    <!--配置IDAO接口所在扫描路径，主要MyBatis映射文件里要配置正确的IDAO路径-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置扫描IDAO的路径，替代原MyBatis的ITopicDAO topicDAO = sqlSession.getMapper(ITopicDAO.class)的实例化形式-->
        <property name="basePackage" value="pers.hanchao.himybatis.curd.dao"/>
        <!--配置sqlSessionFactory，替代private static SqlSessionFactory sqlSessionFactory的注入形式-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--基于注解的声明式事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>